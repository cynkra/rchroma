% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ChromaClient.R
\name{ChromaClient}
\alias{ChromaClient}
\title{Initialize the ChromaClient instance}
\description{
This R6 class provides methods to connect and interact with a running ChromaDB instance.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{base_url}}{The base URL of the ChromaDB instance.}

\item{\code{req}}{A request object created with \code{httr2::request()}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ChromaClient-new}{\code{ChromaClient$new()}}
\item \href{#method-ChromaClient-validate}{\code{ChromaClient$validate()}}
\item \href{#method-ChromaClient-version}{\code{ChromaClient$version()}}
\item \href{#method-ChromaClient-server_info}{\code{ChromaClient$server_info()}}
\item \href{#method-ChromaClient-heartbeat}{\code{ChromaClient$heartbeat()}}
\item \href{#method-ChromaClient-auth_identity}{\code{ChromaClient$auth_identity()}}
\item \href{#method-ChromaClient-reset_database}{\code{ChromaClient$reset_database()}}
\item \href{#method-ChromaClient-create_collection}{\code{ChromaClient$create_collection()}}
\item \href{#method-ChromaClient-get_collection}{\code{ChromaClient$get_collection()}}
\item \href{#method-ChromaClient-delete_collection}{\code{ChromaClient$delete_collection()}}
\item \href{#method-ChromaClient-update_collection}{\code{ChromaClient$update_collection()}}
\item \href{#method-ChromaClient-count_collections}{\code{ChromaClient$count_collections()}}
\item \href{#method-ChromaClient-list_collections}{\code{ChromaClient$list_collections()}}
\item \href{#method-ChromaClient-create_database}{\code{ChromaClient$create_database()}}
\item \href{#method-ChromaClient-get_database}{\code{ChromaClient$get_database()}}
\item \href{#method-ChromaClient-add_documents}{\code{ChromaClient$add_documents()}}
\item \href{#method-ChromaClient-update_documents}{\code{ChromaClient$update_documents()}}
\item \href{#method-ChromaClient-delete_documents}{\code{ChromaClient$delete_documents()}}
\item \href{#method-ChromaClient-query_collection}{\code{ChromaClient$query_collection()}}
\item \href{#method-ChromaClient-create_tenant}{\code{ChromaClient$create_tenant()}}
\item \href{#method-ChromaClient-get_tenant}{\code{ChromaClient$get_tenant()}}
\item \href{#method-ChromaClient-clone}{\code{ChromaClient$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-new}{}}}
\subsection{Method \code{new()}}{
This function initializes a connection to the ChromaDB API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$new(host = "http://localhost", port = 8000L, api_path = "/api/v2")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{host}}{The hostname of the ChromaDB server (default: \code{"http://localhost"}).}

\item{\code{port}}{The port on which ChromaDB is running (default: \code{8000}).}

\item{\code{api_path}}{API path for ChromaDB (default: \code{"/api/v2"}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A ChromaClient object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-validate"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-validate}{}}}
\subsection{Method \code{validate()}}{
Validate a ChromaDB connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TBD
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-version"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-version}{}}}
\subsection{Method \code{version()}}{
Get ChromaDB Server Version
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$version()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Server version string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-server_info"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-server_info}{}}}
\subsection{Method \code{server_info()}}{
Get ChromaDB Server Information
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$server_info()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns server capabilities and settings.
}

\subsection{Returns}{
List containing server information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-heartbeat"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-heartbeat}{}}}
\subsection{Method \code{heartbeat()}}{
Check ChromaDB Server Heartbeat
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$heartbeat()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Server heartbeat response as a numeric value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-auth_identity"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-auth_identity}{}}}
\subsection{Method \code{auth_identity()}}{
Get Authentication Identity
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$auth_identity()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Authentication identity information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-reset_database"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-reset_database}{}}}
\subsection{Method \code{reset_database()}}{
Reset ChromaDB Database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$reset_database()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This function resets the entire database. Use with caution as this will delete all data.
Note: This function requires setting ALLOW_RESET=TRUE in the environment variables
or allow_reset=True in the ChromaDB Settings.
}

\subsection{Returns}{
TRUE on success
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-create_collection"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-create_collection}{}}}
\subsection{Method \code{create_collection()}}{
Create a Collection in ChromaDB
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$create_collection(
  name,
  metadata = NULL,
  configuration = NULL,
  tenant = "default",
  database = "default",
  get_or_create = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the collection}

\item{\code{metadata}}{Optional metadata for the collection}

\item{\code{configuration}}{Optional configuration for the collection. For HNSW configuration,
use a list with \code{hnsw_space} (e.g., "cosine", "l2", "ip").}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}

\item{\code{get_or_create}}{Whether to get the collection if it exists (default: FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A collection object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-get_collection"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-get_collection}{}}}
\subsection{Method \code{get_collection()}}{
Get a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$get_collection(name, tenant = "default", database = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the collection}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A collection object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-delete_collection"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-delete_collection}{}}}
\subsection{Method \code{delete_collection()}}{
Delete a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$delete_collection(name, tenant = "default", database = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the collection}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible NULL on success
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-update_collection"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-update_collection}{}}}
\subsection{Method \code{update_collection()}}{
Update a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$update_collection(
  name,
  new_name = NULL,
  new_metadata = NULL,
  tenant = "default",
  database = "default"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the collection}

\item{\code{new_name}}{Optional new name for the collection}

\item{\code{new_metadata}}{Optional new metadata for the collection}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL on success (invisibly)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-count_collections"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-count_collections}{}}}
\subsection{Method \code{count_collections()}}{
Count Collections in a Database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$count_collections(tenant = "default", database = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Number of collections in the database
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-list_collections"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-list_collections}{}}}
\subsection{Method \code{list_collections()}}{
List Collections in a Database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$list_collections(
  tenant = "default",
  database = "default",
  limit = NULL,
  offset = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}

\item{\code{limit}}{Maximum number of collections to return (optional)}

\item{\code{offset}}{Number of collections to skip (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of collections
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-create_database"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-create_database}{}}}
\subsection{Method \code{create_database()}}{
Create a Database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$create_database(name, tenant = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the database}

\item{\code{tenant}}{The tenant name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL invisibly on success
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-get_database"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-get_database}{}}}
\subsection{Method \code{get_database()}}{
Get a Database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$get_database(name, tenant = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the database}

\item{\code{tenant}}{The tenant name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TODO
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-add_documents"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-add_documents}{}}}
\subsection{Method \code{add_documents()}}{
Add Documents to a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$add_documents(
  collection_name,
  documents,
  ids,
  metadatas = NULL,
  embeddings = NULL,
  uris = NULL,
  tenant = "default",
  database = "default"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection_name}}{Name of the collection}

\item{\code{documents}}{List of documents to add}

\item{\code{ids}}{Vector of unique IDs for the documents (required)}

\item{\code{metadatas}}{List of metadata for each document (optional)}

\item{\code{embeddings}}{Optional pre-computed embeddings}

\item{\code{uris}}{Optional vector of URIs associated with the documents}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE on success
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-update_documents"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-update_documents}{}}}
\subsection{Method \code{update_documents()}}{
Update Documents in a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$update_documents(
  collection_name,
  ids,
  documents = NULL,
  metadatas = NULL,
  embeddings = NULL,
  tenant = "default",
  database = "default"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection_name}}{Name of the collection}

\item{\code{ids}}{Vector of document IDs to update}

\item{\code{documents}}{List of new document contents}

\item{\code{metadatas}}{List of new metadata}

\item{\code{embeddings}}{Optional new pre-computed embeddings}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL invisibly on success
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-delete_documents"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-delete_documents}{}}}
\subsection{Method \code{delete_documents()}}{
Delete Documents from a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$delete_documents(
  collection_name,
  ids,
  where = NULL,
  tenant = "default",
  database = "default"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection_name}}{Name of the collection}

\item{\code{ids}}{Vector of document IDs to delete}

\item{\code{where}}{Optional filtering conditions}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL invisibly on success
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-query_collection"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-query_collection}{}}}
\subsection{Method \code{query_collection()}}{
Query Documents in a Collection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$query_collection(
  collection_name,
  query_embeddings,
  n_results = 10L,
  where = NULL,
  where_document = NULL,
  include = c("documents", "metadatas", "distances"),
  tenant = "default",
  database = "default"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection_name}}{Name of the collection}

\item{\code{query_embeddings}}{List of query embeddings (must be a list of numeric vectors)}

\item{\code{n_results}}{Number of results to return per query (default: 10)}

\item{\code{where}}{Optional filtering conditions}

\item{\code{where_document}}{Optional document-based filtering conditions}

\item{\code{include}}{Optional vector of what to include in results. Possible values:
"documents", "embeddings", "metadatas", "distances", "uris", "data"
(default: c("documents", "metadatas", "distances"))}

\item{\code{tenant}}{The tenant name (default: "default")}

\item{\code{database}}{The database name (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Note that ChromaDB's API only accepts embeddings for queries. If you want to query using
text, you need to first convert your text to embeddings using an embedding model
(e.g., using OpenAI's API, HuggingFace's API, or a local model).

Example:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# First convert text to embeddings using your preferred method
text_embedding <- your_embedding_function("your search text")
# Then query using the embedding
result <- query_collection(client, "my_collection",
                         query_embeddings = list(text_embedding))
}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing the query results. Each element (documents, metadatas, distances)
is a nested list, so use double brackets [[]] to access individual elements.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-create_tenant"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-create_tenant}{}}}
\subsection{Method \code{create_tenant()}}{
Create a Tenant
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$create_tenant(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the tenant}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TODO
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-get_tenant"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-get_tenant}{}}}
\subsection{Method \code{get_tenant()}}{
Get a Tenant
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$get_tenant(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the tenant}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A tenant object containing the tenant details
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChromaClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ChromaClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChromaClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
